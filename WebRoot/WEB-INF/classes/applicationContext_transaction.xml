<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- jdbc 事务管理 -->
	<bean id="examTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

    <!--
      注意到<tx:method>中的属性设置，对于传播行为，隔离层级，只读，超时，异常时撤销或提交，都对应的propagation,isolation,timeout,read-only,rollback-for,no-rollback-for属性可以设置，若不设置，默认值是REQUIRED,DEFAULT,-1,false
    -->
	<tx:advice id="txAdvice" transaction-manager="examTransactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" rollback-for="RuntimeException,Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" rollback-for="RuntimeException,Exception"/>
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" rollback-for="RuntimeException,Exception"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" rollback-for="RuntimeException,Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" rollback-for="RuntimeException,Exception"/>
            <tx:method name="select*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" rollback-for="RuntimeException,Exception"/>
            <tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" rollback-for="RuntimeException,Exception"/>
        </tx:attributes>
	</tx:advice>


	<!-- 以AspectJ方式 定义 AOP-->
	
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.hys.exam.dao.local.jdbc.*DAO.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
		
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.hys.exam.service.local.impl.*ManageImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 方法拦截器  MethodInterceptor applicationContext_transaction.xml -->  
	  <bean id="logDaoMethodPointcut" class="com.hys.exam.filter.LogDaoMethodPointcut"></bean>
	  <aop:config proxy-target-class="true">  
	      <aop:pointcut id="daoMethodPointcut" expression="execution(* com.hys.exam.dao.local.jdbc.*.*(..))||execution(* com.hys.exam.service.local.impl.SystemLogManageImpl.addSystemLog(..))"/>  
	      <aop:advisor advice-ref="logDaoMethodPointcut" pointcut-ref="daoMethodPointcut" />  
	  </aop:config>

</beans>